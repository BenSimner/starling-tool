include "./lclist-module.spl"; 


// Spatial true tests
procedure sTrue_test(a: Int, b:Int) 
  requires ((a=b) &*& sTrue()) || ((a!=b) &*& sTrue()); 
  ensures sTrue(); 
{ }  

procedure sTrue_test2(x: Node) 
  requires acc(x) &*& sTrue(); 
  ensures sTrue(); 
{ }  

// // Should hold but diverges. 
// procedure sTrue_test3(x: Node) 
//   requires sTrue() &*& sTrue(); 
//   ensures sTrue() &*& sTrue(); 
// { }  

procedure sTrue_test4() 
  requires sTrue() &*& sTrue(); 
  ensures sTrue(); 
{ }  

// Tests of overlap (+) and inclusion (-**) 

procedure test_inclusion (a: Node, X: Set<Node>) 
  requires acc(X) &*& a in X; 
  ensures acc(a) -** acc(X) ; 
{} 

procedure test_sharing (a: Node, b: Node) 
  requires acc(a) &+& acc(b);
  ensures (acc(a) &*& acc(b)) || acc(a); 
{}


// List tests 

procedure test_list (head: Node, a: Node, b: Node) 
  requires has1LockG(head, a, b);
  ensures acc(a) -** sTrue();  
{ 
  a.next := null; 
} 


// `requires' conjunction test

procedure test_req (a: Node, b: Node) 
  requires acc(a) &*& sTrue()
  requires acc(a) &*& acc(b)
  ensures false; 
{} 

// procedure test_conj (a: Node, b: Node) 
//   requires acc(a) &*& acc(b)
//   ensures false
// {} 
